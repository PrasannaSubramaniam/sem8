[{"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\index.js":"1","D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\App.js":"2","D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\components\\SelectElective.js":"3","D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\components\\TimeTable.js":"4"},{"size":219,"mtime":1609514624799,"results":"5","hashOfConfig":"6"},{"size":4330,"mtime":1609563299803,"results":"7","hashOfConfig":"6"},{"size":2045,"mtime":1609560021729,"results":"8","hashOfConfig":"6"},{"size":2161,"mtime":1609563444394,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ctusx8",{"filePath":"12","messages":"13","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\index.js",[],"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\App.js",["20","21","22","23","24","25","26","27"],"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\components\\SelectElective.js",["28"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst SelectElective = ({ electiveList, handleSubmit }) => {\r\n  const [showSubmit, setshowSubmit] = useState(false);\r\n  const [checked, setchecked] = useState(\r\n    new Array(electiveList.length).fill(\"\")\r\n  );\r\n  const [disabled, setdisabled] = useState(\r\n    new Array(electiveList.length).fill(\"\")\r\n  );\r\n  const handleClick = (i) => {\r\n    let checkedArray = [...checked];\r\n    checkedArray[i] = checkedArray[i] ? \"\" : \"checked\";\r\n    setchecked(checkedArray);\r\n  };\r\n  useEffect(() => {\r\n    let checkedArray = [...checked];\r\n    let disabledArray = [...disabled];\r\n    let count = 0;\r\n    checkedArray.forEach((el) => {\r\n      if (el === \"checked\") count++;\r\n    });\r\n    if (count === 3) {\r\n      checkedArray.forEach((el, i) => {\r\n        if (el === \"\") disabledArray[i] = \"disabled\";\r\n      });\r\n      setshowSubmit(true);\r\n    } else {\r\n      disabledArray = new Array(electiveList.length).fill(\"\");\r\n      setshowSubmit(false);\r\n    }\r\n    setdisabled(disabledArray);\r\n  }, [checked]);\r\n  return (\r\n    <div className=\"se-container\">\r\n      <div className=\"se-heading\">Choose your electives</div>\r\n      <div className=\"se-checkboxes\">\r\n        {electiveList.map((el, i) => (\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              id={`check${i}`}\r\n              checked={checked[i]}\r\n              disabled={disabled[i]}\r\n              onClick={() => {\r\n                console.log(i + \"clicked\");\r\n                handleClick(i);\r\n              }}\r\n            />\r\n            <label\r\n              className=\"se-label\"\r\n              for={`check${i}`}\r\n            >{`${el.name} (${el.code})`}</label>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      {showSubmit ? (\r\n        <div\r\n          className=\"se-submit-btn\"\r\n          onClick={() => {\r\n            handleSubmit(checked);\r\n          }}\r\n        >\r\n          <span>Submit</span>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectElective;\r\n",["29","30"],"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\components\\TimeTable.js",["31","32","33","34","35"],{"ruleId":"36","severity":1,"message":"37","line":58,"column":3,"nodeType":"38","endLine":58,"endColumn":12,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":64,"column":27,"nodeType":"42","messageId":"43","endLine":64,"endColumn":29},{"ruleId":"44","severity":1,"message":"45","line":74,"column":9,"nodeType":"46","endLine":74,"endColumn":42},{"ruleId":"47","severity":1,"message":"48","line":75,"column":11,"nodeType":"46","endLine":75,"endColumn":55},{"ruleId":"49","severity":1,"message":"50","line":113,"column":13,"nodeType":"46","endLine":116,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":120,"column":13,"nodeType":"46","endLine":120,"endColumn":72},{"ruleId":"49","severity":1,"message":"50","line":126,"column":13,"nodeType":"46","endLine":129,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":133,"column":13,"nodeType":"46","endLine":133,"endColumn":70},{"ruleId":"36","severity":1,"message":"51","line":33,"column":6,"nodeType":"52","endLine":33,"endColumn":15,"suggestions":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"49","severity":1,"message":"50","line":28,"column":13,"nodeType":"46","endLine":31,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":64,"column":9,"nodeType":"38","messageId":"60","endLine":64,"endColumn":13},{"ruleId":"58","severity":1,"message":"61","line":65,"column":9,"nodeType":"38","messageId":"60","endLine":65,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":69,"column":13,"nodeType":"64","messageId":"65","endLine":69,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":72,"column":20,"nodeType":"64","messageId":"65","endLine":72,"endColumn":22},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'sethasElectives'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["66"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","React Hook useEffect has missing dependencies: 'disabled' and 'electiveList.length'. Either include them or remove the dependency array.","ArrayExpression",["67"],"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'hour' is assigned a value but never used.","unusedVar","'minute' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"no-global-assign","no-unsafe-negation","Add dependencies array: []",{"range":"74","text":"75"},"Update the dependencies array to be: [checked, disabled, electiveList.length]",{"range":"76","text":"77"},[1894,1894],", []",[1040,1049],"[checked, disabled, electiveList.length]"]