[{"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\index.js":"1","D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\App.js":"2","D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\components\\SelectElective.js":"3","D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\components\\TimeTable.js":"4"},{"size":219,"mtime":1609514624799,"results":"5","hashOfConfig":"6"},{"size":2427,"mtime":1609524402018,"results":"7","hashOfConfig":"6"},{"size":1982,"mtime":1609520005647,"results":"8","hashOfConfig":"6"},{"size":1454,"mtime":1609524637844,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"ctusx8",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\index.js",[],["20","21"],"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\App.js",["22","23"],"D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\components\\SelectElective.js",["24"],"import React, { useState, useEffect } from \"react\";\r\n\r\nconst SelectElective = ({ electiveList, handleSubmit }) => {\r\n  const [showSubmit, setshowSubmit] = useState(false);\r\n  const [checked, setchecked] = useState(\r\n    new Array(electiveList.length).fill(\"\")\r\n  );\r\n  const [disabled, setdisabled] = useState(\r\n    new Array(electiveList.length).fill(\"\")\r\n  );\r\n  const handleClick = (i) => {\r\n    let checkedArray = [...checked];\r\n    checkedArray[i] = checkedArray[i] ? \"\" : \"checked\";\r\n    setchecked(checkedArray);\r\n  };\r\n  useEffect(() => {\r\n    let checkedArray = [...checked];\r\n    let disabledArray = [...disabled];\r\n    let count = 0;\r\n    checkedArray.forEach((el) => {\r\n      if (el === \"checked\") count++;\r\n    });\r\n    if (count === 3) {\r\n      checkedArray.forEach((el, i) => {\r\n        if (el === \"\") disabledArray[i] = \"disabled\";\r\n      });\r\n      setshowSubmit(true);\r\n    } else {\r\n      disabledArray = new Array(electiveList.length).fill(\"\");\r\n      setshowSubmit(false);\r\n    }\r\n    setdisabled(disabledArray);\r\n  }, [checked]);\r\n  return (\r\n    <div className=\"se-container\">\r\n      <div className=\"se-heading\">Choose your electives</div>\r\n      <div className=\"se-checkboxes\">\r\n        {electiveList.map((el, i) => (\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              id={`check${i}`}\r\n              checked={checked[i]}\r\n              disabled={disabled[i]}\r\n              onClick={() => {\r\n                console.log(i + \"clicked\");\r\n                handleClick(i);\r\n              }}\r\n            />\r\n            <label for={`check${i}`}>{`${el.name} ( ${el.code} )`}</label>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      {showSubmit ? (\r\n        <div\r\n          className=\"se-submit-btn\"\r\n          onClick={() => {\r\n            handleSubmit(checked);\r\n          }}\r\n        >\r\n          <span>Submit</span>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectElective;\r\n","D:\\Desktop\\WorkSpace\\github prasannatiruppur\\sem8\\src\\components\\TimeTable.js",["25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":57,"column":3,"nodeType":"32","endLine":57,"endColumn":12,"suggestions":"33"},{"ruleId":"34","severity":1,"message":"35","line":63,"column":27,"nodeType":"36","messageId":"37","endLine":63,"endColumn":29},{"ruleId":"30","severity":1,"message":"38","line":33,"column":6,"nodeType":"39","endLine":33,"endColumn":15,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":5,"column":32,"nodeType":"32","messageId":"43","endLine":5,"endColumn":53},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'sethasElectives'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["46"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'disabled' and 'electiveList.length'. Either include them or remove the dependency array.","ArrayExpression",["47"],"no-unused-vars","'currentSatAlternative' is assigned a value but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},{"desc":"50","fix":"51"},"Add dependencies array: []",{"range":"52","text":"53"},"Update the dependencies array to be: [checked, disabled, electiveList.length]",{"range":"54","text":"55"},[1833,1833],", []",[1040,1049],"[checked, disabled, electiveList.length]"]